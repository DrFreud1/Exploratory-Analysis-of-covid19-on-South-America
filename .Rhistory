data$fittedX
data$completeObs
res.pca <- PCA(data$completeObs, graph = FALSE)
fviz_contrib(res.pca, choice = "var", axes = 1:5, top =10)
summary(res.pca)
fviz_contrib(res.pca, choice = "var", axes = 1:3, top =10)
data <- as.data.frame(dataset)
data$date <- as.Date(data$date, format= "%Y-%m-%d")
data <- subset(data, date == "2020-07-09" )
rownames(data) <- data[,3]
data[,1:4] <- NULL
#data[,9:16] <- NULL
data[,c(15,16)] <- NULL
data <- imputePCA(data, ncp = 3)
data <- data$completeObs
res.pca <- PCA(data, graph = FALSE)
fviz_contrib(res.pca, choice = "var", axes = 1:3, top =10)
summary(res.pca)
View(data)
data <- as.data.frame(dataset)
data$date <- as.Date(data$date, format= "%Y-%m-%d")
data <- subset(data, date == "2020-07-09" )
rownames(data) <- data[,3]
data[,1:4] <- NULL
#data[,9:16] <- NULL
data[,c(15,16)] <- NULL  #Categorical variables are deleted
data <- as.data.frame(scale(data))
#normalize <- function(x){(x-min(x))/(max(x)-min(x))}
#data <- normalize(data)
data <- imputePCA(data, ncp = 3)
data <- as.data.frame(data$completeObs)
res.pca <- PCA(data, graph = FALSE)
fviz_contrib(res.pca, choice = "var", axes = 1:3, top =10)
summary(res.pca)
View(data)
View(data)
cols_to_keep <- c(9,12,11,24,17,25,14,20,1,28)
data <- subset(data, select = cols_to_keep)
View(data)
cor(data)
set.seed(80)
#determine the optimal number of clusters
fviz_nbclust(data, kmeans, method="wss") #metodo codo
fviz_nbclust(data, kmeans, method="silhouette") #metodo de silueta de promedio
#Determine clusters number with group disimilarity
submt <- kmeans(data,centers = 1)$betweenss
for(i in 1:12) submt[i] <- kmeans(data,centers = i)$betweenss
plot(1:12, submt, type = "b", xlab = "Cluster's number", ylab = "Sum of inter group squares")
covid_kmeans <- kmeans(data, centers = 6)
fviz_cluster(covid_kmeans, data = data)
d <- dist(data, method = "euclidean")
# Hierarchical clustering using Complete Linkage
hc1 <- hclust(d, method = "complete" )
# Plot the obtained dendrogram
plot(hc1, cex = 0.6, hang = -1)
hc3 <- agnes(data, method = "ward")
pltree(hc3, cex = 0.6, hang = -1, main = "Dendrogram of agnes")
#Hierarchical cluster with borders
plot(hc3, hang = -1, cex = 0.6)
rect.hclust(hc3, k = 5, border = 2:5)
dataset <- read.csv("~/Yachay_Tech/Decimo_semestre/Multivariate_Statistical_Analysis/Final_project/owid-covid-data.csv")
View(dataset)
#Loading necessary libraries
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(dendextend) # for comparing two dendrograms
library(caret)
library(FactoMineR)
library(ca)
library(ade4)
library(MASS)
library(ExPosition)
library(gplots)
library(corrplot)
library(scales)
library(NbClust)
library(dplyr)
library(fmsb)
library(ClustOfVar)
library(mice)
library(missMDA)
data <- as.data.frame(dataset)
data$date <- as.Date(data$date, format= "%Y-%m-%d")
data <- subset(data, date == "2020-07-09" )
rownames(data) <- data[,3]
data[,1:4] <- NULL
#data[,9:16] <- NULL
data[,c(15,16)] <- NULL  #Categorical variables are deleted
data <- as.data.frame(scale(data))
#normalize <- function(x){(x-min(x))/(max(x)-min(x))}
#data <- normalize(data)
data <- imputePCA(data, ncp = 3)
data <- as.data.frame(data$completeObs)
res.pca <- PCA(data, graph = FALSE)
fviz_contrib(res.pca, choice = "var", axes = 1:3, top =10)
summary(res.pca)
data <- as.data.frame(dataset)
data$date <- as.Date(data$date, format= "%Y-%m-%d")
data <- subset(data, date == "2020-07-09" )
rownames(data) <- data[,3]
data[,1:4] <- NULL
#data[,9:16] <- NULL
data[,c(15,16)] <- NULL  #Categorical variables are deleted
#normalize <- function(x){(x-min(x))/(max(x)-min(x))}
#data <- normalize(data)
data <- imputePCA(data, ncp = 3)
data <- as.data.frame(data$completeObs)
res.pca <- PCA(data, graph = FALSE)
fviz_contrib(res.pca, choice = "var", axes = 1:3, top =10)
summary(res.pca)
data <- as.data.frame(dataset)
data$date <- as.Date(data$date, format= "%Y-%m-%d")
data <- subset(data, date == "2020-07-09" )
rownames(data) <- data[,3]
data[,1:4] <- NULL
#data[,9:16] <- NULL
data[,c(15,16)] <- NULL  #Categorical variables are deleted
data <- as.data.frame(scale(data))
#normalize <- function(x){(x-min(x))/(max(x)-min(x))}
#data <- normalize(data)
data <- imputePCA(data, ncp = 3)
data <- as.data.frame(data$completeObs)
res.pca <- PCA(data, graph = FALSE)
fviz_contrib(res.pca, choice = "var", axes = 1:3, top =10)
summary(res.pca)
fviz_contrib(res.pca, choice = "var", axes = 1, top =10)
fviz_contrib(res.pca, choice = "var", axes = 2, top =10)
fviz_contrib(res.pca, choice = "var", axes = 3, top =10)
fviz_contrib(res.pca, choice = "var", axes = 4, top =10)
fviz_contrib(res.pca, choice = "var", axes = 1:5, top =10)
fviz_contrib(res.pca, choice = "var", axes = 1:3, top =10)
fviz_contrib(res.pca, choice = "var", axes = 1:2, top =10)
fviz_contrib(res.pca, choice = "var", axes = 1, top =10)
res.pca <- prcomp(data, graph = FALSE)
res.pca <- prcomp(data)
fviz_contrib(res.pca, choice = "var", axes = 1, top =10)
summary(res.pca)
res.pca
res.pca <- PCA(data)
res.pca
res.pca$eig
fviz_contrib(res.pca, choice = "var", axes = 1:5, top =10)
res.pca
fviz_contrib(res.pca, choice = "var", axes = 1, top =10)
res.pca$var
fviz_contrib(res.pca, choice = "var", axes = 1:5, top =10)
fviz_contrib(res.pca, choice = "var", axes = 1:7, top =10)
res.pca <- prcomp(data)
fviz_contrib(res.pca, choice = "var", axes = 1:7, top =10)
View(dataset)
data <- as.data.frame(dataset)
data$date <- as.Date(data$date, format= "%Y-%m-%d")
data <- subset(data, date == "2020-07-09" )
rownames(data) <- data[,3]
data[,1:4] <- NULL
#data[,9:16] <- NULL
data[,c(15,16)] <- NULL  #
View(data)
dataset <- read.csv("~/Yachay_Tech/Decimo_semestre/Multivariate_Statistical_Analysis/Final_project/data_byContinent/Europe_dataset.csv")
View(dataset)
#Loading necessary libraries
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(dendextend) # for comparing two dendrograms
library(caret)
library(FactoMineR)
library(ca)
library(ade4)
library(MASS)
library(ExPosition)
library(gplots)
library(corrplot)
library(scales)
library(NbClust)
library(dplyr)
library(fmsb)
library(ClustOfVar)
library(mice)
library(missMDA)
data <- as.data.frame(dataset)
data$date <- as.Date(data$date, format= "%Y-%m-%d")
data <- subset(data, date == "2020-07-09" )
rownames(data) <- data[,3]
data[,1:4] <- NULL
#data[,9:16] <- NULL
data[,c(15,16)] <- NULL  #Categorical variables are deleted
data <- as.data.frame(scale(data))
#normalize <- function(x){(x-min(x))/(max(x)-min(x))}
#data <- normalize(data)
data <- imputePCA(data, ncp = 5)
data <- as.data.frame(data$completeObs)
res.pca <- prcomp(data)
fviz_contrib(res.pca, choice = "var", axes = 1:7, top =10)
summary(res.pca)
data <- as.data.frame(dataset)
data$date <- as.Date(data$date, format= "%Y-%m-%d")
data <- subset(data, date == "2020-07-09" )
rownames(data) <- data[,3]
dataset <- read.csv("~/Yachay_Tech/Decimo_semestre/Multivariate_Statistical_Analysis/Final_project/data_byContinent/Europe_dataset.csv")
View(dataset)
#Loading necessary libraries
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(dendextend) # for comparing two dendrograms
library(caret)
library(FactoMineR)
library(ca)
library(ade4)
library(MASS)
library(ExPosition)
library(gplots)
library(corrplot)
library(scales)
library(NbClust)
library(dplyr)
library(fmsb)
library(ClustOfVar)
library(mice)
library(missMDA)
data <- as.data.frame(dataset)
data$date <- as.Date(data$date, format= "%Y-%m-%d")
data <- subset(data, date == "2020-07-09" )
rownames(data) <- data[,3]
data[,c(1:4,6,8,14:19)] <- NULL
data <- as.data.frame(scale(data))
#normalize <- function(x){(x-min(x))/(max(x)-min(x))}
#data <- normalize(data)
data <- imputePCA(data, ncp = 5)
data <- as.data.frame(data$completeObs)
res.pca <- prcomp(data)
fviz_contrib(res.pca, choice = "var", axes = 1:7, top =10)
summary(res.pca)
fviz_contrib(res.pca, choice = "var", axes = 1:4, top =10)
View(dataset)
fviz_contrib(res.pca, choice = "var", axes = 1:5, top =10)
View(dataset)
library(xslx)
library(xlsx)
library("xlsx")
install.packages("rJava")
install.packages("rJava")
library("xlsx")
t.pca=PCA(X, graph=FALSE)
write.infile(t.pca$var$contrib, "pca.csv", sep=',')
t.pca=PCA(X, graph=FALSE)
write.infile(res.pca$var$contrib, "pca.csv", sep=',')
t.pca=PCA(data, graph=FALSE)
write.infile(res.pca$var$contrib, "pca.csv", sep=',')
t.df.pca = read.xlsx('pca1.xlsx', 1,startRow=1 )
t.df.pca = read.xlsx('pca.xlsx', 1,startRow=1 )
t.df.pca = read.xlsx('pca.csv', 1,startRow=1 )
write.infile(res.pca$var$contrib, "pca1.xlsx", sep=',')
t.df.pca = read.xlsx('pca1.xlsx', 1,startRow=1 )
t.df.pca.r=subset(t.df.pca, Dim.1>mean(Dim.1) | Dim.2>mean(Dim.2) | Dim.3>mean(Dim.3) | Dim.4>mean(Dim.4) | Dim.5>mean(Dim.5))
t.df.pca.r=subset(res.pca$var$contrib, Dim.1>mean(Dim.1) | Dim.2>mean(Dim.2) | Dim.3>mean(Dim.3) | Dim.4>mean(Dim.4) | Dim.5>mean(Dim.5))
#############
t.df = read.xlsx(dataset, 1,startRow=1 )
#############
t.df = read.xlsx(owid-covid-data, 1,startRow=1 )
setwd(C:\Users\USER\Documents\Yachay_Tech\Decimo_semestre\Multivariate_Statistical_Analysis\Final_project)
setwd("C:\Users\USER\Documents\Yachay_Tech\Decimo_semestre\Multivariate_Statistical_Analysis\Final_project")
setwd('C:\Users\USER\Documents\Yachay_Tech\Decimo_semestre\Multivariate_Statistical_Analysis\Final_project')
setwd('C:/Users/USER/Documents/Yachay_Tech/Decimo_semestre/Multivariate_Statistical_Analysis/Final_project')
#############
t.df = read.xlsx("owid-covid-data.csv", 1,startRow=1 )
#############
t.df = read.xlsx("owid-covid-data.xlsx", 1,startRow=1 )
dataset <- read.csv("~/Yachay_Tech/Decimo_semestre/Multivariate_Statistical_Analysis/Final_project/owid-covid-data.csv")
View(dataset)
data <- as.data.frame(dataset)
data$date <- as.Date(data$date, format= "%Y-%m-%d")
data <- subset(data, date == "2020-07-09" )
rownames(data) <- data[,3]
data[,c(1:4,14:19)] <- NULL
data <- as.data.frame(scale(data))
#normalize <- function(x){(x-min(x))/(max(x)-min(x))}
#data <- normalize(data)
data <- imputePCA(data, ncp = 5)
data <- as.data.frame(data$completeObs)
res.pca <- prcomp(data)
fviz_contrib(res.pca, choice = "var", axes = 1:5, top =10)
summary(res.pca)
fviz_contrib(res.pca, choice = "var", axes = 1:6, top =10)
fviz_contrib(res.pca, choice = "var", axes = 1:7, top =10)
res.pca
res.pca$scale
res.pca$sdev
res.pca$center
res.pca$x
View(data)
#Remove not relevant variables (for all world)
cols_to_keep <- c(9,18,16,22,14,15,13,1,2,21)
data <- subset(data, select = cols_to_keep)
#Removing "World" row
row.names.remove <- c("World")
data <- data[!(row.names(data) %in% row.names.remove), ]
View(data)
set.seed(80)
fviz_nbclust(data, kmeans, method="wss") #metodo codo
fviz_nbclust(data, kmeans, method="silhouette") #metodo de silueta de promedio
submt <- kmeans(data,centers = 1)$betweenss
for(i in 1:12) submt[i] <- kmeans(data,centers = i)$betweenss
plot(1:12, submt, type = "b", xlab = "Cluster's number", ylab = "Sum of inter group squares")
#Kmeans
covid_kmeans <- kmeans(data, centers = 8)
fviz_cluster(covid_kmeans, data = data)
# Dissimilarity matrix
d <- dist(data, method = "euclidean")
# Hierarchical clustering using Complete Linkage
hc1 <- hclust(d, method = "complete" )
# Plot the obtained dendrogram
plot(hc1, cex = 0.6, hang = -1)
fviz_cluster(covid_kmeans, data = data)
fviz_contrib(res.pca, choice = "var", axes = 1, top =10)
fviz_contrib(res.pca, choice = "var", axes = 1:7, top =10)
#Kmeans
covid_kmeans <- kmeans(data, centers = 8)
fviz_cluster(covid_kmeans, data = data)
# Dissimilarity matrix
d <- dist(data, method = "euclidean")
# Hierarchical clustering using Complete Linkage
hc1 <- hclust(d, method = "complete" )
# Plot the obtained dendrogram
plot(hc1, cex = 0.6, hang = -1)
hc3 <- agnes(data, method = "ward")
pltree(hc3, cex = 0.6, hang = -1, main = "Dendrogram of agnes")
#Hierarchical cluster with borders
rect.hclust(hc3, k = 5, border = 2:5)
#Hierarchical cluster with borders
rect.hclust(hc3, k = 8, border = 2:5)
fviz_pca_biplot(PCA(data, graph = FALSE), repel = TRUE)
#Asimetrico
fviz_pca_biplot(PCA(data, graph = FALSE), map ="rowprincipal", arrow = c(TRUE, TRUE), repel = TRUE)
dataset <- read.csv("~/Yachay_Tech/Decimo_semestre/Multivariate_Statistical_Analysis/Final_project/data_byContinent/South_America_dataset.csv")
View(dataset)
data <- as.data.frame(dataset)
data$date <- as.Date(data$date, format= "%Y-%m-%d")
data <- subset(data, date == "2020-07-09" )
rownames(data) <- data[,3]
data[,c(1:4,14:19)] <- NULL
data <- as.data.frame(scale(data))
#normalize <- function(x){(x-min(x))/(max(x)-min(x))}
#data <- normalize(data)
data <- imputePCA(data, ncp = 5)
data <- as.data.frame(data$completeObs)
res.pca <- prcomp(data)
fviz_contrib(res.pca, choice = "var", axes = 1:7, top =10)
summary(res.pca)
fviz_contrib(res.pca, choice = "var", axes = 1:4, top =10)
fviz_contrib(res.pca, choice = "var", axes = 1:5, top =10)
fviz_contrib(res.pca, choice = "var", axes = 1:6, top =10)
fviz_contrib(res.pca, choice = "var", axes = 1:3, top =10)
fviz_contrib(res.pca, choice = "var", axes = 1:4, top =10)
fviz_contrib(res.pca, choice = "var", axes = 1:3, top =10)
fviz_contrib(res.pca, choice = "var", axes = 1:5, top =10)
cols_to_keep <- c(9,22,14,2,11,4,1,3,8,13)
data <- subset(data, select = cols_to_keep)
set.seed(80)
#determine the optimal number of clusters
fviz_nbclust(data, kmeans, method="wss") #metodo codo
#Determine clusters number with group disimilarity
submt <- kmeans(data,centers = 1)$betweenss
for(i in 1:12) submt[i] <- kmeans(data,centers = i)$betweenss
plot(1:12, submt, type = "b", xlab = "Cluster's number", ylab = "Sum of inter group squares")
#Kmeans
covid_kmeans <- kmeans(data, centers = 4)
fviz_cluster(covid_kmeans, data = data)
fviz_contrib(res.pca, choice = "var", axes = 1:5, top =10)
fviz_cluster(covid_kmeans, data = data)
hc1 <- hclust(d, method = "complete" )
# Plot the obtained dendrogram
plot(hc1, cex = 0.6, hang = -1)
d <- dist(data, method = "euclidean")
# Hierarchical clustering using Complete Linkage
hc1 <- hclust(d, method = "complete" )
# Plot the obtained dendrogram
plot(hc1, cex = 0.6, hang = -1)
hc3 <- agnes(data, method = "ward")
pltree(hc3, cex = 0.6, hang = -1, main = "Dendrogram of agnes")
#Hierarchical cluster with borders
rect.hclust(hc3, k = 8, border = 2:5)
#Hierarchical cluster with borders
rect.hclust(hc3, k = 4, border = 2:5)
fviz_pca_biplot(PCA(data, graph = FALSE), repel = TRUE)
#Contribucion Biplot
fviz_pca_biplot(res.pca, map ="colgreen", arrow = c(TRUE, FALSE), repel = TRUE)
dataset <- read.csv("~/Yachay_Tech/Decimo_semestre/Multivariate_Statistical_Analysis/Final_project/data_byContinent/North_America_dataset.csv")
View(dataset)
data <- as.data.frame(dataset)
data$date <- as.Date(data$date, format= "%Y-%m-%d")
data <- subset(data, date == "2020-07-09" )
rownames(data) <- data[,3]
data[,c(1:4,14:19)] <- NULL
data <- as.data.frame(scale(data))
#normalize <- function(x){(x-min(x))/(max(x)-min(x))}
#data <- normalize(data)
data <- imputePCA(data, ncp = 5)
data <- as.data.frame(data$completeObs)
res.pca <- prcomp(data)
fviz_contrib(res.pca, choice = "var", axes = 1:5, top =10)
summary(res.pca)
fviz_contrib(res.pca, choice = "var", axes = 1:4, top =10)
View(data)
rica)
cols_to_keep <- c(23,14,10,13,15,3,2,11,1,24)
data <- subset(data, select = cols_to_keep)
set.seed(80)
#determine the optimal number of clusters
fviz_nbclust(data, kmeans, method="wss") #met
#Determine clusters number with group disimilarity
submt <- kmeans(data,centers = 1)$betweenss
for(i in 1:12) submt[i] <- kmeans(data,centers = i)$betweenss
plot(1:12, submt, type = "b", xlab = "Cluster's number", ylab = "Sum of inter group squares")
#Kmeans
covid_kmeans <- kmeans(data, centers = 6)
fviz_cluster(covid_kmeans, data = data)
# Dissimilarity matrix
d <- dist(data, method = "euclidean")
# Hierarchical clustering using Complete Linkage
hc1 <- hclust(d, method = "complete" )
# Plot the obtained dendrogram
plot(hc1, cex = 0.6, hang = -1)
hc3 <- agnes(data, method = "ward")
pltree(hc3, cex = 0.6, hang = -1, main = "Dendrogram of agnes")
#Hierarchical cluster with borders
rect.hclust(hc3, k = 6, border = 2:5)
fviz_contrib(res.pca, choice = "var", axes = 1:4, top =10)
#Remove not relevant variables (for north america)
cols_to_keep <- c(23,14,10,13,15,3,2,11,1)
data <- subset(data, select = cols_to_keep)
#Removing "World" row
row.names.remove <- c("World")
data <- data[!(row.names(data) %in% row.names.remove), ]
set.seed(80)
#determine the optimal number of clusters
fviz_nbclust(data, kmeans, method="wss") #metodo codo
#fviz_nbclust(data, kmeans, method="silhouette") #metodo de silueta de promedio
#Determine clusters number with group disimilarity
submt <- kmeans(data,centers = 1)$betweenss
for(i in 1:12) submt[i] <- kmeans(data,centers = i)$betweenss
plot(1:12, submt, type = "b", xlab = "Cluster's number", ylab = "Sum of inter group squares")
#Kmeans
covid_kmeans <- kmeans(data, centers = 4)
fviz_cluster(covid_kmeans, data = data)
# Dissimilarity matrix
d <- dist(data, method = "euclidean")
# Hierarchical clustering using Complete Linkage
hc1 <- hclust(d, method = "complete" )
# Plot the obtained dendrogram
plot(hc1, cex = 0.6, hang = -1)
fviz_cluster(covid_kmeans, data = data)
covid_kmeans <- kmeans(data, centers = 6)
fviz_cluster(covid_kmeans, data = data)
# Dissimilarity matrix
d <- dist(data, method = "euclidean")
# Hierarchical clustering using Complete Linkage
hc1 <- hclust(d, method = "complete" )
# Plot the obtained dendrogram
plot(hc1, cex = 0.6, hang = -1)
hc3 <- agnes(data, method = "ward")
pltree(hc3, cex = 0.6, hang = -1, main = "Dendrogram of agnes")
#Hierarchical cluster with borders
rect.hclust(hc3, k = 6, border = 2:5)
#Hierarchical cluster with borders
rect.hclust(hc3, k = 6, border = 2:5)
pltree(hc3, cex = 0.6, hang = -1, main = "Dendrogram of agnes")
#Hierarchical cluster with borders
rect.hclust(hc3, k = 6, border = 2:5)
#Hierarchical cluster with borders
rect.hclust(hc3, k = 8, border = 2:5)
#Hierarchical cluster with borders
rect.hclust(hc3, k = 10, border = 2:5)
#Hierarchical cluster with borders
rect.hclust(hc3, k = 9, border = 2:5)
dataset <- read.csv("~/Yachay_Tech/Decimo_semestre/Multivariate_Statistical_Analysis/Final_project/data_byContinent/South_America_dataset.csv")
View(dataset)
data <- as.data.frame(dataset)
data$date <- as.Date(data$date, format= "%Y-%m-%d")
data <- subset(data, date == "2020-07-09" )
rownames(data) <- data[,3]
data[,c(1:4,14:19)] <- NULL
data <- as.data.frame(scale(data))
#normalize <- function(x){(x-min(x))/(max(x)-min(x))}
#data <- normalize(data)
data <- imputePCA(data, ncp = 5)
data <- as.data.frame(data$completeObs)
res.pca <- prcomp(data)
fviz_contrib(res.pca, choice = "var", axes = 1:4, top =10)
summary(res.pca)
res.pca
res.pca <- PCA(data)
fviz_contrib(res.pca, choice = "var", axes = 1:4, top =10)
summary(res.pca)
fviz_contrib(res.pca, choice = "var", axes = 1:3, top =10)
res.pca <- PCA(data, scale = TRUE)
fviz_contrib(res.pca, choice = "var", axes = 1:3, top =10)
res.pca <- PCA(data, scale = TRUE, graph = FALSE)
res.pca <- prcomp(data, scale = TRUE)
res.pca <- PCA(data, scale = TRUE, graph = FALSE)
fviz_contrib(res.pca, choice = "var", axes = 1:3, top =10)
fviz_contrib(res.pca, choice = "var", axes = 1:3, top =10)
res.pca <- prcomp(data, scale = TRUE)
fviz_contrib(res.pca, choice = "var", axes = 1:3, top =10)
summary(res.pca)
res.pca <- PCA(data, scale = TRUE, graph = FALSE)
fviz_contrib(res.pca, choice = "var", axes = 1:4, top =10)
res.pca <- prcomp(data, scale = TRUE)
fviz_contrib(res.pca, choice = "var", axes = 1:4, top =10)
fviz_contrib(res.pca, choice = "var", axes = 1:3, top =10)
